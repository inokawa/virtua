import{c as ee,d as o,D as x,v,o as te,K as ie,L as w,M as O,f as R,g as L,h as z,j as ne,s as C,k as e,n as ae,A as se,N as a,O as le}from"./props-DGm8Sc67.js";import{d as re,f as oe,g as de,O as G,h as ce,F as ue,G as fe,j as me,k as ye,l as N,m as be,S as pe,n as he,o as ge,e as ve,p as ke,C as _e,q as Te,r as Ee,b as Ie,L as Se,t as xe,u as we,v as Oe,w as Re,s as Le,x as ze,I as Ce,y as Ge,z as Ne}from"./ListItem-Dfj0w5hW.js";function Me(M,t){ee(t,!0);let V=o(t,"getKey",3,de),A=o(t,"as",3,"div"),D=o(t,"overscan",3,4),F=o(t,"shift",3,!1),u=o(t,"horizontal",3,!1),k=o(t,"startMargin",3,0);const i=re(t.data.length,t.itemSize,u(),n=>{C(s,v(n))},n=>{t.onscroll&&t.onscroll(n)},()=>{t.onscrollend&&t.onscrollend()});let m=x(void 0),s=x(v([])),l=a(()=>e(s)&&i[we]()),_=a(()=>e(s)&&i[Ge]()),T=a(()=>e(s)&&i[Ne]()),E=a(()=>e(s)&&i[Oe]()),y=a(()=>Re(e(l)[0],e(l)[1],D(),e(_),t.data.length));te(()=>{t.scrollRef?i[G](t.scrollRef):i[G](e(m).parentElement)}),ie(()=>{i[ce]()}),w(()=>{t.data.length!==i[ke]()&&i[_e](t.data.length,F())}),w(()=>{k()!==i[Te]()&&i[Ee](k())});let I;O(()=>{I!==e(E)&&(I=e(E),i[ue]())});let f;O(()=>{f&&f[0]===e(l)[0]&&f[1]===e(l)[1]||(f=e(l),t.onrangechange&&t.onrangechange(e(l)[0],e(l)[1]))});const U=i[fe],j=i[me],H=i[ye],Z=i[N],K=i[be],P=i[pe],q=i[he],B=i[ge];let J=a(()=>{const[n,b]=e(y),d=[];for(let r=n,p=b;r<=p;(r+=1)-1)d.push(t.data[r]);return d}),W=a(()=>Le({"overflow-anchor":"none",flex:"none",position:"relative",visibility:"hidden",width:u()?e(T)+"px":"100%",height:u()?"100%":e(T)+"px","pointer-events":e(_)!==ze?"none":void 0}));var S=R(),X=L(S);return oe(X,A,!1,(n,b)=>{ae(n,c=>C(m,v(c)),()=>e(m));let d;se(()=>d=Ie(n,d,{style:e(W)},void 0,n.namespaceURI===le,n.nodeName.includes("-")));var r=R(),p=L(r);ve(p,19,()=>e(J),(c,h)=>V()(c,h+e(y)[0]),(c,h,Y)=>{const g=a(()=>e(Y)+e(y)[0]);var Q=a(()=>e(s)&&i[N](e(g))),$=a(()=>e(s)&&i[Ce](e(g)));Se(c,{get children(){return t.children},get item(){return e(h)},get index(){return e(g)},get as(){return t.item},get offset(){return e(Q)},get hide(){return e($)},get horizontal(){return u()},get resizer(){return i[xe]}})}),z(b,r)}),z(M,S),ne({getScrollOffset:U,getScrollSize:j,getViewportSize:H,getItemOffset:Z,getItemSize:K,scrollToIndex:P,scrollTo:q,scrollBy:B})}Me.__docgen={data:[{name:"data",visibility:"public",description:"The data items rendered by this component.",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"type",type:"array",text:"T[]"},static:!1,readonly:!1},{name:"children",visibility:"public",description:"The elements renderer snippet.",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"function",text:"Snippet<[item: T, index: number]>"},static:!1,readonly:!1},{name:"getKey",visibility:"public",description:"Function that returns the key of an item in the list. It's recommended to specify whenever possible for performance.",keywords:[],kind:"let",type:{kind:"function",text:"(data: T, index: number) => string | number"},static:!1,readonly:!1,defaultValue:"function"},{name:"as",visibility:"public",description:"Component or element type for container element.",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"type",type:"string",text:"string"},{kind:"type",type:"number",text:"number"}],text:"string | number"},static:!1,readonly:!1,defaultValue:'"div"'},{name:"item",visibility:"public",description:"Component or element type for item element.",keywords:[],kind:"let",type:{kind:"union",type:[{kind:"type",type:"string",text:"string"},{kind:"type",type:"number",text:"number"}],text:"string | number"},static:!1,readonly:!1},{name:"overscan",visibility:"public",description:"Number of items to render above/below the visible bounds of the list. You can increase to avoid showing blank items in fast scrolling.",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"4"},{name:"scrollRef",visibility:"public",description:"Reference to the scrollable element. The default will get the direct parent element of virtualizer.",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"HTMLElement"},static:!1,readonly:!1},{name:"itemSize",visibility:"public",description:`Item size hint for unmeasured items. It will help to reduce scroll jump when items are measured if used properly.

- If not set, initial item sizes will be automatically estimated from measured sizes. This is recommended for most cases.
- If set, you can opt out estimation and use the value as initial item size.`,keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1},{name:"shift",visibility:"public",description:"While true is set, scroll position will be maintained from the end not usual start when items are added to/removed from start. It's recommended to set false if you add to/remove from mid/end of the list because it can cause unexpected behavior. This prop is useful for reverse infinite scrolling.",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"horizontal",visibility:"public",description:"If true, rendered as a horizontally scrollable list. Otherwise rendered as a vertically scrollable list.",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"startMargin",visibility:"public",description:"If you put an element before virtualizer, you have to define its height with this prop.",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"0"},{name:"onscroll",visibility:"public",description:"Callback invoked whenever scroll offset changes.",keywords:[],kind:"let",type:{kind:"function",text:"(offset: number) => void"},static:!1,readonly:!1},{name:"onscrollend",visibility:"public",description:"Callback invoked when scrolling stops.",keywords:[],kind:"let",type:{kind:"function",text:"() => void"},static:!1,readonly:!1},{name:"onrangechange",visibility:"public",description:"Callback invoked when visible items range changes.",keywords:[],kind:"let",type:{kind:"function",text:"(startIndex: number, endIndex: number) => void"},static:!1,readonly:!1}],name:"Virtualizer.svelte"};export{Me as V};
