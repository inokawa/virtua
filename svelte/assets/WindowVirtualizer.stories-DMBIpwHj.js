import{p as L,v as g,s as T,d as I,j as F,w as J,x as Y,t as D,a as _,b as O,f as w,g as e,y as a,c as k,n as E,h as B}from"./iframe-B_aFPW-l.js";import{g as Q,u as X,v as Z,U as $,k as ee,l as te,o as ie,m as ne,e as se,b as re,q as ae,A as oe,L as le,t as de,c as R,s as ce,i as ue}from"./legacy-CgqApKn8.js";import"./preload-helper-BQ24v_F8.js";var fe=w("<div></div>");function x(b,t){L(t,!0);let p=g(t,"getKey",3,ae),v=g(t,"shift",3,!1),s=g(t,"horizontal",3,!1);const i=Q(t.data.length,t.itemSize,t.overscan,void 0,void 0,!t.itemSize),c=X(i,s()),o=Z(i,s()),l=i.$subscribe($,()=>{T(n,i.$getStateVersion(),!0)}),u=i.$subscribe(ee,()=>{t.onscroll&&t.onscroll()}),h=i.$subscribe(te,()=>{t.onscrollend&&t.onscrollend()});let r=I(void 0),n=I(F(i.$getStateVersion())),N=a(()=>e(n)&&i.$getRange()),U=a(()=>e(n)&&i.$isScrolling()),S=a(()=>e(n)&&i.$getTotalSize());ie(()=>{c.$observeRoot(e(r)),o.$observe(e(r))}),ne(()=>{l(),u(),h(),c.$dispose(),o.$dispose()}),J(()=>{t.data.length!==i.$getItemsLength()&&i.$update(oe,[t.data.length,v()])});let z;Y(()=>{z!==e(n)&&(z=e(n),o.$fixScrollJump())});const K=i.$findStartIndex,q=i.$findEndIndex,G=o.$scrollToIndex;let P=a(()=>ce({"overflow-anchor":"none",flex:"none",position:"relative",visibility:"hidden",overflow:"hidden",width:s()?e(S)+"px":"100%",height:s()?"100%":e(S)+"px","pointer-events":e(U)?"none":void 0}));var f=fe();return se(f,21,()=>de(e(N)),d=>p()(t.data[d],d),(d,m)=>{const j=a(()=>t.data[e(m)]),H=a(()=>e(n)&&i.$getItemOffset(e(m))),M=a(()=>e(n)&&i.$isUnmeasuredItem(e(m)));le(d,{get children(){return t.children},get item(){return e(j)},get index(){return e(m)},as:"div",get offset(){return e(H)},get hide(){return e(M)},get horizontal(){return s()},get resizer(){return c.$observeItem}})}),re(f,d=>T(r,d),()=>e(r)),D(()=>R(f,e(P))),_(b,f),O({findStartIndex:K,findEndIndex:q,scrollToIndex:G})}x.__docgen={data:[{name:"data",visibility:"public",description:"The data items rendered by this component.",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"type",type:"array",text:"T[]"},static:!1,readonly:!1},{name:"children",visibility:"public",description:"The elements renderer snippet.",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"function",text:"Snippet<[item: T, index: number]>"},static:!1,readonly:!1},{name:"getKey",visibility:"public",description:"Function that returns the key of an item in the list. It's recommended to specify whenever possible for performance.",keywords:[],kind:"let",type:{kind:"function",text:"(data: T, index: number) => string | number"},static:!1,readonly:!1,defaultValue:"function"},{name:"overscan",visibility:"public",description:"Number of items to render above/below the visible bounds of the list. You can increase to avoid showing blank items in fast scrolling.",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1},{name:"itemSize",visibility:"public",description:`Item size hint for unmeasured items. It will help to reduce scroll jump when items are measured if used properly.

- If not set, initial item sizes will be automatically estimated from measured sizes. This is recommended for most cases.
- If set, you can opt out estimation and use the value as initial item size.`,keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1},{name:"shift",visibility:"public",description:"While true is set, scroll position will be maintained from the end not usual start when items are added to/removed from start. It's recommended to set false if you add to/remove from mid/end of the list because it can cause unexpected behavior. This prop is useful for reverse infinite scrolling.",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"horizontal",visibility:"public",description:"If true, rendered as a horizontally scrollable list. Otherwise rendered as a vertically scrollable list.",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"onscroll",visibility:"public",description:"Callback invoked whenever scroll offset changes.",keywords:[],kind:"let",type:{kind:"function",text:"() => void"},static:!1,readonly:!1},{name:"onscrollend",visibility:"public",description:"Callback invoked when scrolling stops.",keywords:[],kind:"let",type:{kind:"function",text:"() => void"},static:!1,readonly:!1}],name:"WindowVirtualizer.svelte"};var me=w("<div> </div>"),ye=w('<div style="padding: 200px 100px;"><div style="border: solid 1px gray;"><!></div></div>');function W(b,t){L(t,!1);const p=[20,40,180,77],v=Array.from({length:1e3}).map((o,l)=>p[l%4]);ue();var s=ye(),i=k(s),c=k(i);x(c,{data:v,getKey:(l,u)=>u,children:(l,u=E,h=E)=>{var r=me(),n=k(r);D(()=>{R(r,`
            height: ${u()??""}px;
            background: white;
            border-bottom: solid 1px #ccc;
          `),B(n,h())}),_(l,r)},$$slots:{default:!0}}),_(b,s),O()}W.__docgen={data:[],name:"WindowVirtualizer.svelte"};const he={component:x},y={render:()=>({Component:W})};var V,A,C;y.parameters={...y.parameters,docs:{...(V=y.parameters)==null?void 0:V.docs,source:{originalSource:`{
  render: () => ({
    Component: DefaultComponent
  })
}`,...(C=(A=y.parameters)==null?void 0:A.docs)==null?void 0:C.source}}};const ge=["Default"];export{y as Default,ge as __namedExportsOrder,he as default};
