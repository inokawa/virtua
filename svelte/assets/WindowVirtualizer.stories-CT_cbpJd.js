import{c as D,d as g,s as T,v as I,D as E,o as F,K as J,L as Y,M as Q,n as X,A as N,h as w,j as O,B as _,k as e,N as r,i as Z,C as k,G as V,H as $}from"./props-EeEA5hs9.js";import{d as ee,p as te,q as ie,U as ne,h as se,j as ae,e as re,l as oe,n as le,A as de,L as ce,c as R,s as ue}from"./ListItem-DHIiBQX_.js";var fe=_("<div></div>");function x(b,t){D(t,!0);let p=g(t,"getKey",3,oe),v=g(t,"shift",3,!1),s=g(t,"horizontal",3,!1);const i=ee(t.data.length,t.itemSize,t.overscan,void 0,void 0,!t.itemSize),c=te(i,s()),o=ie(i,s()),l=i.$subscribe(ne,()=>{T(n,I(i.$getStateVersion()))}),u=i.$subscribe(se,()=>{t.onscroll&&t.onscroll()}),h=i.$subscribe(ae,()=>{t.onscrollend&&t.onscrollend()});let a=E(void 0),n=E(I(i.$getStateVersion())),K=r(()=>e(n)&&i.$getRange()),U=r(()=>e(n)&&i.$isScrolling()),S=r(()=>e(n)&&i.$getTotalSize());F(()=>{c.$observeRoot(e(a)),o.$observe(e(a))}),J(()=>{l(),u(),h(),c.$dispose(),o.$dispose()}),Y(()=>{t.data.length!==i.$getItemsLength()&&i.$update(de,[t.data.length,v()])});let z;Q(()=>{z!==e(n)&&(z=e(n),o.$fixScrollJump())});const G=i.$findStartIndex,j=i.$findEndIndex,q=o.$scrollToIndex;let H=r(()=>ue({"overflow-anchor":"none",flex:"none",position:"relative",visibility:"hidden",width:s()?e(S)+"px":"100%",height:s()?"100%":e(S)+"px","pointer-events":e(U)?"none":void 0}));var f=fe();return X(f,d=>T(a,d),()=>e(a)),re(f,21,()=>le(e(K)),d=>p()(t.data[d],d),(d,m)=>{const M=r(()=>t.data[e(m)]);var P=r(()=>e(n)&&i.$getItemOffset(e(m))),B=r(()=>e(n)&&i.$isUnmeasuredItem(e(m)));ce(d,{get children(){return t.children},get item(){return e(M)},get index(){return e(m)},as:"div",get offset(){return e(P)},get hide(){return e(B)},get horizontal(){return s()},get resizer(){return c.$observeItem}})}),N(()=>R(f,"style",e(H))),w(b,f),O({findStartIndex:G,findEndIndex:j,scrollToIndex:q})}x.__docgen={data:[{name:"data",visibility:"public",description:"The data items rendered by this component.",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"type",type:"array",text:"T[]"},static:!1,readonly:!1},{name:"children",visibility:"public",description:"The elements renderer snippet.",keywords:[{name:"required",description:""}],kind:"let",type:{kind:"function",text:"Snippet<[item: T, index: number]>"},static:!1,readonly:!1},{name:"getKey",visibility:"public",description:"Function that returns the key of an item in the list. It's recommended to specify whenever possible for performance.",keywords:[],kind:"let",type:{kind:"function",text:"(data: T, index: number) => string | number"},static:!1,readonly:!1,defaultValue:"function"},{name:"overscan",visibility:"public",description:"Number of items to render above/below the visible bounds of the list. You can increase to avoid showing blank items in fast scrolling.",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1},{name:"itemSize",visibility:"public",description:`Item size hint for unmeasured items. It will help to reduce scroll jump when items are measured if used properly.

- If not set, initial item sizes will be automatically estimated from measured sizes. This is recommended for most cases.
- If set, you can opt out estimation and use the value as initial item size.`,keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1},{name:"shift",visibility:"public",description:"While true is set, scroll position will be maintained from the end not usual start when items are added to/removed from start. It's recommended to set false if you add to/remove from mid/end of the list because it can cause unexpected behavior. This prop is useful for reverse infinite scrolling.",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"horizontal",visibility:"public",description:"If true, rendered as a horizontally scrollable list. Otherwise rendered as a vertically scrollable list.",keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"onscroll",visibility:"public",description:"Callback invoked whenever scroll offset changes.",keywords:[],kind:"let",type:{kind:"function",text:"() => void"},static:!1,readonly:!1},{name:"onscrollend",visibility:"public",description:"Callback invoked when scrolling stops.",keywords:[],kind:"let",type:{kind:"function",text:"() => void"},static:!1,readonly:!1}],name:"WindowVirtualizer.svelte"};var me=_("<div> </div>"),ye=_('<div style="padding: 200px 100px;"><div style="border: solid 1px gray;"><!></div></div>');function W(b,t){D(t,!1);const p=[20,40,180,77],v=Array.from({length:1e3}).map((o,l)=>p[l%4]);Z();var s=ye(),i=k(s),c=k(i);x(c,{data:v,getKey:(l,u)=>u,children:(l,u=V,h=V)=>{var a=me(),n=k(a);N(()=>{R(a,"style",`
            height: ${u()??""}px;
            background: white;
            border-bottom: solid 1px #ccc;
          `),$(n,h())}),w(l,a)},$$slots:{default:!0}}),w(b,s),O()}W.__docgen={keywords:[],data:[],name:"WindowVirtualizer.svelte"};const ve={component:x},y={render:()=>({Component:W})};var A,C,L;y.parameters={...y.parameters,docs:{...(A=y.parameters)==null?void 0:A.docs,source:{originalSource:`{
  render: () => ({
    Component: DefaultComponent
  })
}`,...(L=(C=y.parameters)==null?void 0:C.docs)==null?void 0:L.source}}};const he=["Default"];export{y as Default,he as __namedExportsOrder,ve as default};
